function [v,w] = Controller(robot,pos_objetivo,pos_robot)
    %CONTROLLER esta funcion toma la posicion relativa a la cual 
    %debe ir el robot y proporciona v y w para alcanzar el objetivo
    %Como de momento pos_robot es con getLocation tiene la forma [x y z
    %theta]
    
    tol_giro = 0.01;
    tol_distancia = 0.01;

    %Calculo de diferencia de posicion
    pos_dif =pos_objetivo([1,2])-pos_robot([1,2]);
    angle_robot = wrapToPi(pos_robot(4));
    
    %Calculamos angulo entre robot y objetivo
    angle_objetivo =wrapToPi(atan2(pos_dif(2),pos_dif(1))); 
    angle_dif = wrapToPi(angle_objetivo - angle_robot);
    
  
    %Correccion angulo
    if abs(angle_dif) > tol_giro
        w = angle_dif/pi; %Valor entre 0-1 por eso divido entre pi
                       %Dado que el maximo error va a ser pi radianes
        v = 0;
    
    %Correccion distancia
    elseif abs(pos_dif(2))>tol_distancia
        v = 0.1;
        w = 0;
    
    %Correccion orientacion
    elseif pos
         v = 0;
         w = 0;
    
    %aparcao
    else
         v = 0;
         w = 0;
    end

end

